---

- name: Check if docker-credential-helpers is installed
  ansible.builtin.stat:
    path: "{{ bin_docker_credential_helpers_bin_path }}"
  register: bin_docker_credential_helpers_binary

- name: Check which version of docker-credential-helpers is installed
  ansible.builtin.shell: |
    {{ bin_docker_credential_helpers_bin_path }} version
  register: bin_docker_credential_helpers_version_check
  check_mode: false
  when: >
    bin_docker_credential_helpers_binary.stat.exists
    and bin_docker_credential_helpers_binary.stat.executable
  changed_when: false

- name: Include installation of docker-credential-helpers
  ansible.builtin.include_tasks: docker-credential-helpers_install.yml
  vars:
    bin_docker_credential_helpers_version_string: >-
      docker-credential-pass (github.com/docker/docker-credential-helpers) v{{ bin_docker_credential_helpers_version }}
  when: >
    not (bin_docker_credential_helpers_binary.stat.exists
        and bin_docker_credential_helpers_binary.stat.executable)
    or bin_docker_credential_helpers_version_check.stdout is not defined
    or bin_docker_credential_helpers_version_string != bin_docker_credential_helpers_version_check.stdout
    or bin_docker_credential_helpers_force_install | bool

- name: Deploy wrapper docker-credential-gopass
  ansible.builtin.copy:
    src: docker-credential-helpers/docker-credential-gopass
    dest: "{{ default_bin_path | default(bin_user_path, true) }}/docker-credential-gopass"
    mode: u=rwx,go=rx

- name: Deploy wrapper pass
  ansible.builtin.copy:
    src: docker-credential-helpers/pass
    dest: "{{ default_bin_path | default(bin_user_path, true) }}/pass"
    mode: u=rwx,go=rx

# - name: Ensure credStore 'gopass' in Docker config
#   ansible.builtin.lineinfile:
#     path: ~/.docker/config.json
#     state: present
#     regexp: '^(.*"credStore": )[^,]*(,?)$'
#     line: '\g<1>"gopass"\g<2>'
#     backrefs: true

- name: Ensure Docker directory
  ansible.builtin.file:
    path: ~/.docker
    state: directory
    mode: u=rwx,go=rx

- name: Touch Docker config.json
  ansible.builtin.file:
    path: ~/.docker/config.json
    state: touch
    mode: u=rw,go=r
    modification_time: preserve
    access_time: preserve

- name: Load Docker config.json
  ansible.builtin.slurp:
    src: ~/.docker/config.json
  register: bin_docker_imported_vars
  ignore_errors: true

- name: Append credStore "gopass" to Docker config
  ansible.builtin.set_fact:
    bin_docker_imported_vars: >-
      {{ bin_docker_imported_vars.content |
      b64decode |
      default('{}', true) |
      from_json |
      combine({'credStore': 'gopass'}) }}

- name: Write Docker config.json
  ansible.builtin.copy:
    content: '{{ bin_docker_imported_vars | to_nice_json }}'
    dest: ~/.docker/config.json
    mode: u=rw,go=r

...
